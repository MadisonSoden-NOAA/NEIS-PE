(venv36) canistel:mcb madison.soden$ python
Python 3.6.3 (default, Oct  7 2017, 02:03:21) 
[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import mcb0_1 as p


        ----------------------------------------------------------------------
        To declare Knowledge Engine: 
        >> e = mcb0_1.GCoralBleaching() 
        >> e.reset() 
        

        To use test cases call: 
        >> e.likely_facts() 
        >> e.unlikely_facts() 
        >> e.verylikely_facts() 
        >> e.misinformed_facts()
        >> e.missing_facts()
        

        To manually insert facts into knowledge engine call:
        >> yield sst(rRange = 'value') 
        or 
        >> yield windsp(rRange = 'value') 
        rRange values are 'uLow', 'dLow', 'vLow', 'Low', 'sLow', 'average', 'sHigh',
        'High', 'vHigh', 'dHigh', and 'uHigh'
        

        To view current rule base call: 
        >> e.get_rules() 
        
 
        To view current fact base call: 
        >> e.fact
        

        To run Knowledge Engine call: 
        >> e.run() 
        ----------------------------------------------------------------------
        
 
 

>>> e = p.GCoralBleaching()
>>> e.reset()
>>> e.misinformed_facts()
>>> e.run()
wind scalar values in unbelievable range
sst values in unbelievable range
>>> e.reset()
>>> e.verylikely_facts()
>>> e.run()
Coral bleaching is very likely
wind scalar is Some what Low
sst is very high
>>> e.facts
FactList([(0, InitialFact()), (1, sst(rRange='vHigh', rtime='midday', date='29112017')), (2, windsp(rRange='sLow', rtime='midday', date='29112017'))])
>>> e.get_rules()
[Rule(sst(rRange='High'), windsp(rRange='Low')) => <function GCoralBleaching.c1 at 0x10445ef28>, Rule(sst(rRange='average'), windsp(rRange='average')) => <function GCoralBleaching.c2 at 0x104464048>, Rule(sst(rRange='vHigh'), windsp(rRange='sLow')) => <function GCoralBleaching.c3 at 0x1044640d0>, Rule(NOT(sst(rRange=ORFC(L('uLow'), L('dLow'), L('vLow'), L('Low'), L('sLow'), L('average'), L('sHigh'), L('High'), L('vHigh'), L('dHigh'), 'uHigh')),),) => <function GCoralBleaching.m1 at 0x1044642f0>, Rule(NOT(windsp(rRange=ORFC(L('uLow'), L('dLow'), L('vLow'), L('Low'), L('sLow'), L('average'), L('sHigh'), L('High'), L('vHigh'), L('dHigh'), L('uHigh'))),),) => <function GCoralBleaching.m2 at 0x104464378>, Rule(sst(rRange='dLow'),) => <function GCoralBleaching.sst0 at 0x10445e598>, Rule(sst(rRange='vLow'),) => <function GCoralBleaching.sst1 at 0x10445e620>, Rule(sst(rRange='Low'),) => <function GCoralBleaching.sst2 at 0x10445e6a8>, Rule(sst(rRange='sLow'),) => <function GCoralBleaching.sst3 at 0x10445e730>, Rule(sst(rRange='average'),) => <function GCoralBleaching.sst4 at 0x10445e7b8>, Rule(sst(rRange='sHigh'),) => <function GCoralBleaching.sst5 at 0x10445e840>, Rule(sst(rRange='High'),) => <function GCoralBleaching.sst6 at 0x10445e8c8>, Rule(sst(rRange='vHigh'),) => <function GCoralBleaching.sst7 at 0x10445e950>, Rule(sst(rRange='dHigh'),) => <function GCoralBleaching.sst8 at 0x10445e9d8>, Rule(OR(sst(rRange='uLow'), sst(rRange='uHigh')),) => <function GCoralBleaching.u1 at 0x104464158>, Rule(OR(windsp(rRange='uLow'), windsp(rRange='uHigh')),) => <function GCoralBleaching.u2 at 0x1044641e0>, Rule(windsp(rRange='dLow'),) => <function GCoralBleaching.windsp0 at 0x10445ea60>, Rule(windsp(rRange='vLow'),) => <function GCoralBleaching.windsp1 at 0x10445eae8>, Rule(windsp(rRange='Low'),) => <function GCoralBleaching.windsp2 at 0x10445eb70>, Rule(windsp(rRange='sLow'),) => <function GCoralBleaching.windsp3 at 0x10445ebf8>, Rule(windsp(rRange='average'),) => <function GCoralBleaching.windsp4 at 0x10445ec80>, Rule(windsp(rRange='sHigh'),) => <function GCoralBleaching.windsp5 at 0x10445ed08>, Rule(windsp(rRange='High'),) => <function GCoralBleaching.windsp6 at 0x10445ed90>, Rule(windsp(rRange='vHigh'),) => <function GCoralBleaching.windsp7 at 0x10445ee18>, Rule(windsp(rRange='dHigh'),) => <function GCoralBleaching.windsp8 at 0x10445eea0>]
>>> 
